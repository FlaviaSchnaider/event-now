{"ast":null,"code":"var _jsxFileName = \"C:\\\\event-now\\\\frontend\\\\src\\\\pages\\\\VotePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { api } from '../utils/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './VotePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await api.get(`/events/${id}`);\n      setEvent(res.data);\n    };\n    fetchData();\n  }, [id]);\n  const handleChange = (qid, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [qid]: value\n    }));\n  };\n  const handleMultiChange = (qid, value) => {\n    const prevValues = answers[qid] || [];\n    const exists = prevValues.includes(value);\n    const updated = exists ? prevValues.filter(v => v !== value) : [...prevValues, value];\n    setAnswers(prev => ({\n      ...prev,\n      [qid]: updated\n    }));\n  };\n  const submit = async () => {\n    const unanswered = event.questions.some(q => {\n      const answer = answers[q.id];\n      return q.multi ? !answer || answer.length === 0 : !answer;\n    });\n    if (unanswered) {\n      alert(\"Por favor, responda todas as perguntas antes de enviar.\");\n      return;\n    }\n    try {\n      await api.post(`/events/${id}/vote`, {\n        answers\n      });\n      alert(\"Voto enviado com sucesso!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Erro ao enviar voto. Tente novamente.\");\n    }\n  };\n  if (!event) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"vote-description\",\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), event.questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vote-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"vote-question\",\n        children: q.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-options\",\n        children: q.options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"vote-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: q.multi ? \"checkbox\" : \"radio\",\n            name: q.id,\n            value: opt._id,\n            checked: q.multi ? (answers[q.id] || []).includes(opt._id) : answers[q.id] === opt._id,\n            onChange: () => {\n              q.multi ? handleMultiChange(q.id, opt._id) : handleChange(q.id, opt._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: opt.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, opt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"vote-submit\",\n      onClick: submit,\n      children: \"Enviar Votos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(`/event/${id}/results`),\n      children: \"Ver Resultados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(VotePage, \"oJVAjlFe1hH5FOp5i9t9HBpFC8A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VotePage;\nvar _c;\n$RefreshReg$(_c, \"VotePage\");","map":{"version":3,"names":["useEffect","useState","api","useParams","useNavigate","jsxDEV","_jsxDEV","VotePage","_s","id","event","setEvent","answers","setAnswers","navigate","fetchData","res","get","data","handleChange","qid","value","prev","handleMultiChange","prevValues","exists","includes","updated","filter","v","submit","unanswered","questions","some","q","answer","multi","length","alert","post","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","map","text","options","opt","type","name","_id","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/event-now/frontend/src/pages/VotePage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { api } from '../utils/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './VotePage.css';\n\nexport default function VotePage() {\n  const { id } = useParams();\n  const [event, setEvent] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await api.get(`/events/${id}`);\n      setEvent(res.data);\n    };\n    fetchData();\n  }, [id]);\n\n  const handleChange = (qid, value) => {\n    setAnswers(prev => ({ ...prev, [qid]: value }));\n  };\n\n  const handleMultiChange = (qid, value) => {\n    const prevValues = answers[qid] || [];\n    const exists = prevValues.includes(value);\n    const updated = exists\n      ? prevValues.filter(v => v !== value)\n      : [...prevValues, value];\n    setAnswers(prev => ({ ...prev, [qid]: updated }));\n  };\n\n  const submit = async () => {\n    const unanswered = event.questions.some(q => {\n      const answer = answers[q.id];\n      return q.multi ? !answer || answer.length === 0 : !answer;\n    });\n\n    if (unanswered) {\n      alert(\"Por favor, responda todas as perguntas antes de enviar.\");\n      return;\n    }\n\n    try {\n      await api.post(`/events/${id}/vote`, { answers });\n      alert(\"Voto enviado com sucesso!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Erro ao enviar voto. Tente novamente.\");\n    }\n  };\n\n\n  if (!event) return <p>Carregando...</p>;\n\n  return (\n    <div className=\"vote-page\">\n      <h1>{event.title}</h1>\n      <p className=\"vote-description\">{event.description}</p>\n\n      {event.questions.map(q => (\n        <div key={q.id} className=\"vote-card\">\n          <p className=\"vote-question\">{q.text}</p>\n          <div className=\"vote-options\">\n            {q.options.map(opt => (\n              <label key={opt._id} className=\"vote-option\">\n                <input\n                  type={q.multi ? \"checkbox\" : \"radio\"}\n                  name={q.id}\n                  value={opt._id}\n                  checked={\n                    q.multi\n                      ? (answers[q.id] || []).includes(opt._id)\n                      : answers[q.id] === opt._id\n                  }\n                  onChange={() => {\n                    q.multi\n                      ? handleMultiChange(q.id, opt._id)\n                      : handleChange(q.id, opt._id);\n                  }}\n                />\n                <span>{opt.text}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n      ))}\n        <button className=\"vote-submit\" onClick={submit}>Enviar Votos</button>\n        <button onClick={() => navigate(`/event/${id}/results`)}>Ver Resultados</button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}